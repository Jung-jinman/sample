day 02

A03DataTest
A04DataExam
	- 초기값을 저장하여 변수 선언
	- 실수와 정수의 곱셈
	- 정수 형식으로 강제 캐스팅
A05VariableExam
	- 초기값 없이 변수 선언
	- 2개의 정수 나눗셈
	- 실수 형식 결과값을 위한 강제 캐스팅

## 요약
결론: 데이터의 기본 형식과 크기
정수는 byte(1바이트) < short(2바이트) < int(4바이트) < long(8바이트)
실수는 float(4바이트) < double(8바이트)
문자형 char(2바이트), 논리형 boolean(1바이트)

정수 8바이트 long과 실수 8바이트 double은 메모리 크기는 같지만 표현형식이 다르다.
double 형식이 훨씬 매우 큰 범위의 값을 표현한다.

더하기 / 빼기 / 곱하기 / 나누기 연산
정수와 정수의 연산 결과는 정수
실수가 1개라도 있으면 결과는 실수
연산결과의 데이터 형식과 저장하는 변수의 형식이 동일해야 한다.
단, 아래와 같은 자동 캐스팅의 경우는 오류없이 실행된다.

캐스팅 casting은 데이터 형식 변환을 말한다.
○ 자동 캐스팅 (자동으로 데이터 형식이 변화된다.)
	ex) int 값을 double 변수로 저장할 때 
			double weight = 57; (O)
		반대로 double 값을 int 변수로 저장하는 것은 오류
			int age = 34.2; (X) 

○ 강제 캐스팅 (직접적인 명령으로 데이터 형식이 변환된다.)
		int age = 34.2; 와 같은 데이터 변환을 강제로 한다.
		이런 경우에 데이터가 손실 될 수 있다.

1. 데이터 형식에 따른 변수 선언
	- 선언: 변수가 저장할 데이터의 형식과 이름을 정하는 것.
		선언방법 1) int age = 26;							//선언과 초기값 저장
		선언방법 2) int age;								//초기값 없음
				 System.out.println("나이:"+age);			//문법 오류(컴파일 오류)
				 :
				 age = 26;								//필요할 때 값 저장

2. 4월 20일
	비트와 바이트
	* 메모리에 데이터를 저장할 때 모든 값은 0과 1로만 한다.(2진법, binary)
	* 정수, 실수, 문자열, 문자와 같은 데이터가 모두 2진접으로 변환된다.
	* 비트는 0 또는 1을 표시하는 한 자리
	
	바이트는 8비트가 모여 1바이트를 만든다.
	*1024 바이트가 모이면 1KB(kilo byte)
	*1024KB = 1MB
	*1024MB = 1GB
	*1024GB = 1TB
	*1024TB = 1PB
	원시형 데이터 타입은 각각 다른 메모리 바이트를 할당 받게 된다.
	
3. 리터럴과 데이터 형식
	- 리터럴은 값 그 자체, 데이터 형식에 따라 표시하는 방법이 다르다.
		ex) 1234는 int 정수, 메모리 크기는 4바이트
			1234L은 long 정수, 메모리 크기는 8바이트
			3.1419는 double 실수, 메모리 크기는 8바이트(값의 표현범위, 소수점이하 자리수 차이)
			3.1419F는 float 실수, 메모리 크기는 4바이트
			'a' 또는 '6'은 char 문자 1개, 메모리 크기는 2바이트
			true 또는 false 2가지로 표시하는  boolean 논리형, 메모리 크기는 바이트
			원시 타입은 아니지만 다른 프로그래밍 언어에서는 기본 형식으로 사용하는 "java", "1234"는 문자열, 메모리 크기는 문자열 안에 문자의 갯수에 따라 할당된다.
			
	
